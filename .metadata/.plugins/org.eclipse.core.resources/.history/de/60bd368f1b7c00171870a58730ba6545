sap.ui.controller("calculator.MAINVIEW", {

/**
* Called when a controller is instantiated and its View controls (if available) are already created.
* Can be used to modify the View before it is displayed, to bind event handlers and do other one-time initialization.
* @memberOf calculator.MAINVIEW
*/
	onInit: function() {
		var that = this;
		this.inputs=[];
		//var that=this;//.getView().byId("idinput");
		
	},

/**
* Similar to onAfterRendering, but this hook is invoked before the controller's View is re-rendered
* (NOT before the first rendering! onInit() is used for that one!).
* @memberOf calculator.MAINVIEW
*/
//	onBeforeRendering: function() {
//
//	},

/**
* Called when the View has been rendered (so its HTML is part of the document). Post-rendering manipulations of the HTML could be done here.
* This hook is the same one that SAPUI5 controls get after being rendered.
* @memberOf calculator.MAINVIEW
*/
//	onAfterRendering: function() {
//
//	},

/**
* Called when the Controller is destroyed. Use this one to free resources and finalize activities.
* @memberOf calculator.MAINVIEW
*/
//	onExit: function() {
//		
//this.inputs.join('')/this.inputs.push(val);
//	},
	
	id1 :function(){
		var val=this.getView().byId("btn1id").getText();
		
	   //this.getView().byId("idinput").setValue(btnval);
		debugger;
		//this.inputs.push(val)
		//this.getView().byId("idinput").setValue(this.inputs.join(''));
		this.fillArry(val);
		
		
	},
	id2 :function(){
		var val=this.getView().byId("btn2id").getText();
		
	   //this.getView().byId("idinput").setValue(btnval);
		debugger;
		this.inputs.push(val)
		this.getView().byId("idinput").setValue(this.inputs.join(''));
	},
	id3 :function(){
		var val=this.getView().byId("btn3id").getText();
		
	   //this.getView().byId("idinput").setValue(btnval);
		debugger;
		this.inputs.push(val)
		this.getView().byId("idinput").setValue(this.inputs.join(''));
	},
	id4 :function(){
		var val=this.getView().byId("btn4id").getText();
		
	   //this.getView().byId("idinput").setValue(btnval);
		debugger;
		this.inputs.push(val)
		this.getView().byId("idinput").setValue(this.inputs.join(''));
	},
	 insert: function() {
	    var display = document.getElementById('display');
	    clearPreviousResult();
	    if (display.value.indexOf('.') === -1) display.value += '.';
	},
	
	fillArry : function(controlId){
		that.inputs.push(val)
		that.getView().byId("idinput").setValue(that.inputs.join(''));
	}



	



});